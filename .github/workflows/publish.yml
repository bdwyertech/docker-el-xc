name: Build

on:
  workflow_dispatch:
    inputs:
      caller:
        description: 'The invoker of the workflow'
        required: false
        default: ''
  push:
    branches: ['main']

env:
  IMAGE_NAME: bdwyertech/el8-xc

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write  # Required for provenance metadata

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   env:
      #     blah: a
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Parameters
        id: params
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # images: |
          #   ${{ env.IMAGE_NAME }}
          #   ghcr.io/${{ env.IMAGE_NAME }}
          images: |
            ghcr.io/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=sha,enable=true,priority=100,prefix=${{ steps.params.outputs.date }}--,suffix=,format=short
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: |
            BUILD_DATE=${{ steps.params.outputs.date }}
            VCS_REF=${{ github.sha }}
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: true
          sbom: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # cache-from: type=registry,ref=ghcr.io/${{ env.IMAGE_NAME }}:buildcache
          # cache-to: type=registry,ref=ghcr.io/${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ env.IMAGE_NAME }}:${{ steps.params.outputs.date }}--${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
  
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'container-security'

